name: Build and Publish

on:
  push:
    branches:
      - master
      - java8-multiarch
      - java8-openj9
      - java11*
      - java16*
      - java17*
      - test/**
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+-java8-multiarch"
      - "[0-9]+.[0-9]+.[0-9]+-java8-openj9"
      - "[0-9]+.[0-9]+.[0-9]+-java11*"
      - "[0-9]+.[0-9]+.[0-9]+-java16*"
    paths-ignore:
      - "*.md"
      - "docs/**"
      - "examples/**"

env:
  IMAGE_TO_TEST: itzg/minecraft-server:test-${{ github.repository_owner }}-${{ github.run_id }}
  DOCKER_IMAGE: itzg/minecraft-server

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2.4.0

    - name: Prepare
      id: prep
      run: |
        VERSION=edge
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        if [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=${GITHUB_REF#refs/heads/}
          if [[ $VERSION == master ]]; then
            VERSION=latest
          fi
        fi
        TAGS="${{env.DOCKER_IMAGE}}:${VERSION//\//-}"
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=version::${VERSION//\//-}

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build for test
      uses: docker/build-push-action
      if: github.ref_name == 'java8'
      with:
        context: .
        platforms: linux/amd64
        tags: ${{ env.IMAGE_TO_TEST }}
        # ensure latest base image is used
        pull: true
        load: true
        push: false
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run tests
      if: github.ref_name == 'java8'
      run: |
        tests/test.sh
      env:
        MINECRAFT_VERSION: 1.12.2

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ secrets.GCLOUD_CLIENT_EMAIL}}
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.GCLOUD_SERVICE_KEY }}
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: gcr.io
        # Docker repository to tag the image with
        repository: ${{ secrets.GCLOUD_PROJECT_ID }}/${{env.DOCKER_IMAGE}}
        context: .
        file: ./Dockerfile
        # ensure latest base image is used
        pull: true
        # publish
        push: true
        # tags determined by prep step
        tags: ${{ steps.prep.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        labels: |
          org.opencontainers.image.documentation=https://github.com/itzg/docker-minecraft-server
          org.opencontainers.image.version=${{ steps.prep.outputs.version }}
          org.opencontainers.image.source=https://github.com/itzg/docker-minecraft-server
          org.opencontainers.image.revision=${{ github.sha }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
